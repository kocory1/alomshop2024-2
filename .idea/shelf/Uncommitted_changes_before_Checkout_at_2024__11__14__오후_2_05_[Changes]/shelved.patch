Index: alomshop/src/main/java/com/example/alomshop/domain/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.alomshop.domain;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport lombok.Getter;\nimport lombok.Setter;\n\n//임시\n@Entity\n@Getter\n@Setter\npublic class Product {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/alomshop/src/main/java/com/example/alomshop/domain/Product.java b/alomshop/src/main/java/com/example/alomshop/domain/Product.java
--- a/alomshop/src/main/java/com/example/alomshop/domain/Product.java	(revision c40b37c0827fea23ba6b1c063a73ee206c110674)
+++ b/alomshop/src/main/java/com/example/alomshop/domain/Product.java	(date 1731560202562)
@@ -1,19 +1,71 @@
 package com.example.alomshop.domain;
 
-import jakarta.persistence.Entity;
-import jakarta.persistence.GeneratedValue;
-import jakarta.persistence.GenerationType;
-import jakarta.persistence.Id;
-import lombok.Getter;
-import lombok.Setter;
+import jakarta.persistence.*;
 
-//임시
 @Entity
-@Getter
-@Setter
 public class Product {
+
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long id;
+    private int id;
+
+    // ProductCategory를 참조하는 외래 키
+    @ManyToOne
+    @JoinColumn(name = "category_id", nullable = false) // 외래 키 명을 'category_id'로 설정
+    private ProductCategory category;
 
+    @Column(nullable = false, name = "product_name")
+    private String productName;
+
+    private String description;
+
+    @Column(nullable = false)
+    private int price;
+
+    @Column(nullable = false)
+    private int stock;
+
+    // Getters and Setters
+
+    public ProductCategory getCategory() {
+        return category;
+    }
+
+    public void setCategory(ProductCategory category) {
+        this.category = category;
+    }
+
+
+
+    public String getProductName() {
+        return productName;
+    }
+
+    public void setProductName(String productName) {
+        this.productName = productName;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public int getPrice() {
+        return price;
+    }
+
+    public void setPrice(int price) {
+        this.price = price;
+    }
+
+    public int getStock() {
+        return stock;
+    }
+
+    public void setStock(int stock) {
+        this.stock = stock;
+    }
 }
Index: alomshop/src/main/java/com/example/alomshop/Repository/ProductRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.alomshop.Repository;\n\nimport com.example.alomshop.Entity.Product;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface ProductRepository extends JpaRepository<Product, Long> {\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/alomshop/src/main/java/com/example/alomshop/Repository/ProductRepository.java b/alomshop/src/main/java/com/example/alomshop/Repository/ProductRepository.java
--- a/alomshop/src/main/java/com/example/alomshop/Repository/ProductRepository.java	(revision c40b37c0827fea23ba6b1c063a73ee206c110674)
+++ b/alomshop/src/main/java/com/example/alomshop/Repository/ProductRepository.java	(date 1731560154443)
@@ -1,7 +1,11 @@
-package com.example.alomshop.Repository;
+package com.example.alomshop.repository;
 
-import com.example.alomshop.Entity.Product;
+import com.example.alomshop.domain.Product;
 import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
 
+//임시
+@Repository
 public interface ProductRepository extends JpaRepository<Product, Long> {
-}
\ No newline at end of file
+
+}
Index: alomshop/src/main/java/com/example/alomshop/Entity/Product.java
===================================================================
diff --git a/alomshop/src/main/java/com/example/alomshop/Entity/Product.java b/alomshop/src/main/java/com/example/alomshop/Entity/Product.java
deleted file mode 100644
--- a/alomshop/src/main/java/com/example/alomshop/Entity/Product.java	(revision c40b37c0827fea23ba6b1c063a73ee206c110674)
+++ /dev/null	(revision c40b37c0827fea23ba6b1c063a73ee206c110674)
@@ -1,72 +0,0 @@
-package com.example.alomshop.Entity;
-
-import com.fasterxml.jackson.annotation.JsonProperty;
-import jakarta.persistence.*;
-
-@Entity
-public class Product {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private int id;
-
-    // ProductCategory를 참조하는 외래 키
-    @ManyToOne
-    @JoinColumn(name = "category_id", nullable = false) // 외래 키 명을 'category_id'로 설정
-    private ProductCategory category;
-
-    @Column(nullable = false, name = "product_name")
-    private String productName;
-
-    private String description;
-
-    @Column(nullable = false)
-    private int price;
-
-    @Column(nullable = false)
-    private int stock;
-
-    // Getters and Setters
-
-    public ProductCategory getCategory() {
-        return category;
-    }
-
-    public void setCategory(ProductCategory category) {
-        this.category = category;
-    }
-
-
-
-    public String getProductName() {
-        return productName;
-    }
-
-    public void setProductName(String productName) {
-        this.productName = productName;
-    }
-
-    public String getDescription() {
-        return description;
-    }
-
-    public void setDescription(String description) {
-        this.description = description;
-    }
-
-    public int getPrice() {
-        return price;
-    }
-
-    public void setPrice(int price) {
-        this.price = price;
-    }
-
-    public int getStock() {
-        return stock;
-    }
-
-    public void setStock(int stock) {
-        this.stock = stock;
-    }
-}
Index: alomshop/src/main/java/com/example/alomshop/Controller/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.alomshop.Controller;\n\nimport com.example.alomshop.Dto.ProductRequestDto;\nimport com.example.alomshop.Entity.Product;\nimport com.example.alomshop.Entity.ProductCategory;\nimport com.example.alomshop.Repository.ProductCategoryRepository;\nimport com.example.alomshop.Repository.ProductRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport java.util.List;\nimport java.util.Optional;\n\n@RestController\n@RequestMapping(\"/product\")\npublic class ProductController {\n\n    @Autowired\n    private ProductRepository productRepository;\n\n    @Autowired\n    private ProductCategoryRepository productCategoryRepository;\n\n    // 새 상품 추가\n    @PostMapping\n    public ResponseEntity<String> createProduct(@RequestBody ProductRequestDto productRequestDto) {\n        // category_name으로 ProductCategory 찾기\n        Optional<ProductCategory> categoryOptional = productCategoryRepository.findByCategoryName(productRequestDto.getCategory());\n\n        if (!categoryOptional.isPresent()) {\n            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"Invalid category NAME\");\n        }\n\n        // 새로운 Product 객체 생성 및 설정\n        Product product = new Product();\n        product.setCategory(categoryOptional.get());\n        product.setProductName(productRequestDto.getProductName());\n        product.setDescription(productRequestDto.getDescription());\n        product.setPrice(productRequestDto.getPrice());\n        product.setStock(productRequestDto.getStock());\n\n        // Product 저장\n        productRepository.save(product);\n\n        return ResponseEntity.status(HttpStatus.CREATED).body(\"Product created successfully\");\n    }\n\n    // 전체 상품 조회\n    @GetMapping\n    public List<Product> getAllProducts() {\n        return productRepository.findAll();\n    }\n\n    // 상품 ID로 조회\n    @GetMapping(\"/{id}\")\n    public ResponseEntity<Product> getProductById(@PathVariable Long id) {\n        Optional<Product> product = productRepository.findById(id);\n        return product.map(ResponseEntity::ok)\n                .orElseGet(() -> ResponseEntity.status(HttpStatus.NOT_FOUND).build());\n    }\n\n    // 상품 삭제\n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity<Void> deleteProduct(@PathVariable Long id) {\n        if (productRepository.existsById(id)) {\n            productRepository.deleteById(id);\n            return ResponseEntity.noContent().build();\n        } else {\n            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/alomshop/src/main/java/com/example/alomshop/Controller/ProductController.java b/alomshop/src/main/java/com/example/alomshop/Controller/ProductController.java
--- a/alomshop/src/main/java/com/example/alomshop/Controller/ProductController.java	(revision c40b37c0827fea23ba6b1c063a73ee206c110674)
+++ b/alomshop/src/main/java/com/example/alomshop/Controller/ProductController.java	(date 1731560154443)
@@ -1,16 +1,16 @@
-package com.example.alomshop.Controller;
+package com.example.alomshop.controller;
 
-import com.example.alomshop.Dto.ProductRequestDto;
-import com.example.alomshop.Entity.Product;
-import com.example.alomshop.Entity.ProductCategory;
-import com.example.alomshop.Repository.ProductCategoryRepository;
-import com.example.alomshop.Repository.ProductRepository;
+import com.example.alomshop.domain.Product;
+import com.example.alomshop.domain.User;
+import com.example.alomshop.repository.ProductRepository;
+import com.example.alomshop.service.ProductService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.*;
-import java.util.List;
-import java.util.Optional;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
 
 @RestController
 @RequestMapping("/product")
@@ -18,57 +18,14 @@
 
     @Autowired
     private ProductRepository productRepository;
-
     @Autowired
-    private ProductCategoryRepository productCategoryRepository;
+    private ProductService productService;
 
-    // 새 상품 추가
     @PostMapping
-    public ResponseEntity<String> createProduct(@RequestBody ProductRequestDto productRequestDto) {
-        // category_name으로 ProductCategory 찾기
-        Optional<ProductCategory> categoryOptional = productCategoryRepository.findByCategoryName(productRequestDto.getCategory());
-
-        if (!categoryOptional.isPresent()) {
-            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Invalid category NAME");
-        }
-
-        // 새로운 Product 객체 생성 및 설정
-        Product product = new Product();
-        product.setCategory(categoryOptional.get());
-        product.setProductName(productRequestDto.getProductName());
-        product.setDescription(productRequestDto.getDescription());
-        product.setPrice(productRequestDto.getPrice());
-        product.setStock(productRequestDto.getStock());
-
-        // Product 저장
-        productRepository.save(product);
-
-        return ResponseEntity.status(HttpStatus.CREATED).body("Product created successfully");
+    public ResponseEntity<Product> createProduct(@RequestBody Product product) {
+        Product createdProduct = productService.createProduct(product);
+        return new ResponseEntity<>(createdProduct, HttpStatus.CREATED);
     }
 
-    // 전체 상품 조회
-    @GetMapping
-    public List<Product> getAllProducts() {
-        return productRepository.findAll();
-    }
-
-    // 상품 ID로 조회
-    @GetMapping("/{id}")
-    public ResponseEntity<Product> getProductById(@PathVariable Long id) {
-        Optional<Product> product = productRepository.findById(id);
-        return product.map(ResponseEntity::ok)
-                .orElseGet(() -> ResponseEntity.status(HttpStatus.NOT_FOUND).build());
-    }
-
-    // 상품 삭제
-    @DeleteMapping("/{id}")
-    public ResponseEntity<Void> deleteProduct(@PathVariable Long id) {
-        if (productRepository.existsById(id)) {
-            productRepository.deleteById(id);
-            return ResponseEntity.noContent().build();
-        } else {
-            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
-        }
-    }
 
 }
Index: alomshop/src/main/java/com/example/alomshop/Entity/ProductCategory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/alomshop/src/main/java/com/example/alomshop/Entity/ProductCategory.java b/alomshop/src/main/java/com/example/alomshop/domain/ProductCategory.java
rename from alomshop/src/main/java/com/example/alomshop/Entity/ProductCategory.java
rename to alomshop/src/main/java/com/example/alomshop/domain/ProductCategory.java
--- a/alomshop/src/main/java/com/example/alomshop/Entity/ProductCategory.java	(revision c40b37c0827fea23ba6b1c063a73ee206c110674)
+++ b/alomshop/src/main/java/com/example/alomshop/domain/ProductCategory.java	(date 1731560202568)
@@ -1,4 +1,4 @@
-package com.example.alomshop.Entity;
+package com.example.alomshop.domain;
 
 import com.fasterxml.jackson.annotation.JsonProperty;
 import jakarta.persistence.*;
